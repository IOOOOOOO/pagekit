!function(t){var e={};function n(s){if(e[s])return e[s].exports;var a=e[s]={i:s,l:!1,exports:{}};return t[s].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=t,n.c=e,n.d=function(t,e,s){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(s,a,function(e){return t[e]}.bind(null,a));return s},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=29)}({28:function(t,e){function n(t){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function s(e){return"function"==typeof Symbol&&"symbol"===n(Symbol.iterator)?t.exports=s=function(t){return n(t)}:t.exports=s=function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":n(t)},s(e)}t.exports=s},29:function(t,e,n){"use strict";n.r(e);var s=n(28),a=n.n(s),i={name:"installer",el:"#installer",data:function(){return _.merge({step:"start",status:"",message:"",config:{database:{connections:{mysql:{user:"",host:"localhost",dbname:"pagekit"},sqlite:{}}}},option:{system:{admin:{},site:{}},"system/site":{}},user:{username:"admin"},hidePassword:!0,editingPassword:!1},window.$installer)},mounted:function(){Object.assign(this.config.database,{default:this.sqlite?"sqlite":"mysql"})},methods:{resource:function(t,e){return this.$http.post("installer/".concat(t),e)},gotoStep:function(t){this.$set(this,"step",t),"language"==t&&this.focuslang()},focuslang:function(){this.$nextTick(function(){document.getElementById("selectbox").focus()})},stepLanguage:function(){this.$asset({js:[this.$url.route("system/intl/".concat(this.locale))]}).then(function(){this.$set(this.option.system.admin,"locale",this.locale),this.$set(this.option.system.site,"locale",this.locale),this.$locale=window.$locale,this.gotoStep("database")})},stepDatabase:function(){var t=_.cloneDeep(this.config);_.forEach(t.database.connections,function(e,n){n!=t.database.default?delete t.database.connections[n]:e.host&&(e.host=e.host.replace(/:(\d+)$/,function(t,n){return e.port=n,""}))}),this.resource("check",{config:t,locale:this.locale}).then(function(e){var n=e.data;this.isPlainObject(n)||(n={message:"Whoops, something went wrong"}),"no-tables"==n.status?(this.gotoStep("site"),this.config=t):(this.$set(this,"status",n.status),this.$set(this,"message",n.message))})},stepSite:function(){this.gotoStep("finish"),this.stepInstall()},stepInstall:function(){var t=this;this.$set(this,"status","install"),this.resource("install",{config:this.config,option:this.option,user:this.user,locale:this.locale}).then(function(e){var n=this,s=e.data;setTimeout(function(){t.isPlainObject(s)||(s={message:"Whoops, something went wrong"}),"success"==s.status?(n.$set(n,"status","finished"),setTimeout(function(){location.href=n.$url.route("admin")},3e3)):(n.$set(n,"status","failed"),n.$set(n,"message",s.message))},2e3)})},isPlainObject:function(t){return!!t&&"object"===a()(t)&&"[object Object]"===Object.prototype.toString.call(t)}},components:{start:{props:["vm"],template:'\n                <div class="uk-text-center">\n\n                    <div class="uk-panel uk-padding-small">\n                        <a @click="vm.gotoStep(\'language\')">\n                            <img src="app/system/assets/images/pagekit-logo-large.svg" alt="Pagekit">\n                            <p>\n                                <svg class="tm-arrow" width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg">\n                                    <line fill="none" stroke="#FFFFFF" stroke-width="2" stroke-linecap="round" stroke-miterlimit="10" x1="2" y1="18" x2="36" y2="18"/>\n                                    <polyline fill="none" stroke="#FFFFFF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="26.071,6.5 37.601,18.03 26,29.631 "/>\n                                </svg>\n                            </p>\n                        </a>\n                    </div>\n\n                </div>'},language:{props:["vm"],template:'\n                <div class="uk-card uk-card-default uk-card-body">\n\n                    <h1 class="uk-card-title uk-text-center">{{ \'Choose language\' | trans }}</h1>\n                    <div class="uk-margin uk-text-muted uk-text-center">{{ "Select your site language." | trans }}</div>\n\n                    <form @submit.prevent="vm.stepLanguage">\n                        <select id="selectbox" class="uk-width-1-1 uk-select" size="10" v-model="vm.locale">\n                            <option v-for="(lang, key) in vm.locales" :value="key">{{ lang }}</option>\n                        </select>\n\n                        <p class="uk-text-right uk-margin-remove-bottom">\n                            <button class="uk-button uk-button-primary" type="submit">\n                                <span class="uk-text-middle">{{ \'Next\' | trans }}</span>\n                                <span class="uk-margin-small-left">\n                                    <svg width="18" height="11" viewBox="0 0 18 11" xmlns="http://www.w3.org/2000/svg">\n                                        <line fill="none" stroke="#FFFFFF" stroke-linecap="round" stroke-miterlimit="10" x1="3" y1="5.5" x2="15" y2="5.5"/>\n                                        <path fill="#FFFFFF" d="M10.5,10.9c-0.128,0-0.256-0.049-0.354-0.146c-0.195-0.195-0.195-0.512,0-0.707l4.597-4.597l-4.597-4.597\n                                        c-0.195-0.195-0.195-0.512,0-0.707s0.512-0.195,0.707,0l4.95,4.95c0.195,0.195,0.195,0.512,0,0.707l-4.95,4.95\n                                        C10.756,10.852,10.628,10.9,10.5,10.9z"/>\n                                    </svg>\n                                </span>\n                            </button>\n                        </p>\n                    </form>\n\n                </div>'},database:{props:["vm"],data:function(){return{db:this.vm.config.database.default,prefix:"pk_"}},template:'\n                <div class="uk-card uk-card-default uk-card-body">\n\n                    <h1 class="uk-card-title uk-text-center">{{ \'Connect database\' | trans }}</h1>\n                    <div class="uk-margin uk-text-muted uk-text-center">{{ \'Enter your database connection details.\' | trans }}</div>\n\n                    <div class="uk-alert uk-alert-danger uk-margin uk-text-center" v-show="vm.message"><p>{{ vm.message }}</p></div>\n\n                    <form class="uk-form-horizontal tm-form-horizontal" @submit.prevent="submit">\n                        <div class="uk-margin">\n                            <label for="form-dbdriver" class="uk-form-label">{{ \'Driver\' | trans }}</label>\n                            <div class="uk-form-controls">\n                                <select id="form-dbdriver" class="uk-width-1-1 uk-select" name="dbdriver" v-model="vm.config.database.default" @change="change">\n                                    <option value="sqlite" v-if="vm.sqlite">SQLite</option>\n                                    <option value="mysql">MySQL</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class="uk-margin" v-if="db == \'mysql\'">\n                            <div class="uk-margin">\n                                <label for="form-mysql-dbhost" class="uk-form-label">{{ \'Hostname\' | trans }}</label>\n                                <div class="uk-form-controls">\n                                    <input id="form-mysql-dbhost" class="uk-width-1-1 uk-input" type="text" name="host" v-model="vm.config.database.connections.mysql.host" v-validate="\'required\'">\n                                    <div class="uk-text-meta uk-text-danger" v-show="errors.first(\'host\')">{{ \'Host cannot be blank.\' | trans }}</div>\n                                </div>\n                            </div>\n                            <div class="uk-margin">\n                                <label for="form-mysql-dbuser" class="uk-form-label">{{ \'User\' | trans }}</label>\n                                <div class="uk-form-controls">\n                                    <input id="form-mysql-dbuser" class="uk-width-1-1 uk-input" type="text" name="user" v-model="vm.config.database.connections.mysql.user" v-validate="\'required\'">\n                                    <div class="uk-text-meta uk-text-danger" v-show="errors.first(\'user\')">{{ \'User cannot be blank.\' | trans }}</div>\n                                </div>\n                            </div>\n                            <div class="uk-margin">\n                                <label for="form-mysql-dbpassword" class="uk-form-label">{{ \'Password\' | trans }}</label>\n                                <div class="uk-form-controls">\n                                    <div class="uk-inline uk-width-1-1">\n                                        <a class="uk-form-icon uk-form-icon-flip" :uk-icon="vm.hidePassword ? \'lock\' : \'unlock\'" @click.prevent="vm.hidePassword = !vm.hidePassword"></a>\n                                        <input id="form-password" class="uk-width-1-1 uk-input" :type="vm.hidePassword ? \'password\' : \'text\'" name="password" v-model="vm.config.database.connections.mysql.password">\n                                    </div>\n                                </div>\n                            </div>\n                            <div class="uk-margin">\n                                <label for="form-mysql-dbname" class="uk-form-label">{{ \'Database Name\' | trans }}</label>\n                                <div class="uk-form-controls">\n                                    <input id="form-mysql-dbname" class="uk-width-1-1 uk-input" type="text" name="dbname" v-model="vm.config.database.connections.mysql.dbname" v-validate="\'required\'">\n                                    <div class="uk-text-meta uk-text-danger" v-show="errors.first(\'dbname\')">{{ \'Database name cannot be blank.\' | trans }}</div>\n                                </div>\n                            </div>\n                            <div class="uk-margin">\n                                <label for="form-mysql-dbprefix" class="uk-form-label">{{ \'Table Prefix\' | trans }}</label>\n                                <div class="uk-form-controls">\n                                    <input id="form-mysql-dbprefix" class="uk-width-1-1 uk-input" type="text" name="mysqlprefix" v-model="vm.config.database.connections.mysql.prefix" v-validate="{required: true, regex: /^[a-zA-Z][a-zA-Z0-9._-]*$/}">\n                                    <div class="uk-text-meta uk-text-danger" v-show="errors.first(\'mysqlprefix\')">{{ \'Prefix must start with a letter and can only contain alphanumeric characters (A-Z, 0-9) and underscore (_)\' | trans }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="uk-margin" v-show="vm.config.database.default == \'sqlite\'">\n                            <div class="uk-margin">\n                                <label for="form-sqlite-dbprefix" class="uk-form-label">{{ \'Table Prefix\' | trans }}</label>\n                                <div class="uk-form-controls">\n                                    <input id="form-sqlite-dbprefix" class="uk-width-1-1 uk-input" type="text" name="sqliteprefix" v-model="vm.config.database.connections.sqlite.prefix" v-validate="{required: true, regex: /^[a-zA-Z][a-zA-Z0-9._-]*$/}">\n                                    <div class="uk-text-meta uk-text-danger" v-show="errors.first(\'sqliteprefix\')">{{ \'Prefix must start with a letter and can only contain alphanumeric characters (A-Z, 0-9) and underscore (_)\' | trans }}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <p class="uk-text-right uk-margin-remove-bottom">\n                            <button class="uk-button uk-button-primary" type="submit">\n                                <span class="uk-text-middle">{{ \'Next\' | trans }}</span>\n                                <span class="uk-margin-small-left">\n                                    <svg width="18" height="11" viewBox="0 0 18 11" xmlns="http://www.w3.org/2000/svg">\n                                        <line fill="none" stroke="#FFFFFF" stroke-linecap="round" stroke-miterlimit="10" x1="3" y1="5.5" x2="15" y2="5.5"/>\n                                        <path fill="#FFFFFF" d="M10.5,10.9c-0.128,0-0.256-0.049-0.354-0.146c-0.195-0.195-0.195-0.512,0-0.707l4.597-4.597l-4.597-4.597\n                                        c-0.195-0.195-0.195-0.512,0-0.707s0.512-0.195,0.707,0l4.95,4.95c0.195,0.195,0.195,0.512,0,0.707l-4.95,4.95\n                                        C10.756,10.852,10.628,10.9,10.5,10.9z"/>\n                                    </svg>\n                                </span>\n                            </button>\n                        </p>\n                    </form>\n\n                </div>',created:function(){this.default(this.db)},methods:{submit:function(){var t=this;this.$validator.validateAll().then(function(e){e&&t.vm.stepDatabase()})},change:function(t){this.db=t.target.value},default:function(t){this.vm.config.database.connections[t].prefix||(this.vm.config.database.connections[t].prefix=this.prefix)}},watch:{db:function(t){this.default(t)}}},site:{props:["vm"],template:'\n                <div class="uk-card uk-card-default uk-card-body">\n\n                    <h1 class="uk-card-title uk-text-center">{{ \'Setup your site\' | trans }}</h1>\n                    <div class="uk-margin uk-text-muted uk-text-center">{{ \'Choose a title and create the administrator account.\' | trans }}</div>\n\n                    <form class="uk-form-horizontal tm-form-horizontal" @submit.prevent="submit">\n                        <div class="uk-margin">\n                            <label for="form-sitename" class="uk-form-label">{{ \'Site Title\' | trans }}</label>\n                            <div class="uk-form-controls">\n                                <input id="form-sitename" class="uk-width-1-1 uk-input" type="text" name="name" v-model="vm.option[\'system/site\'].title" v-validate="\'required\'">\n                                <div class="uk-text-meta uk-text-danger" v-show="errors.first(\'name\')">{{ \'Site title cannot be blank.\' | trans }}</div>\n                            </div>\n                        </div>\n\n                        <div class="uk-margin">\n                            <label for="form-username" class="uk-form-label">{{ \'Username\' | trans }}</label>\n                            <div class="uk-form-controls">\n                                <input id="form-username" class="uk-width-1-1 uk-input" type="text" name="user" v-model="vm.user.username" v-validate="{required: true, regex: /^[a-zA-Z0-9._-]{3,}$/}">\n                                <div class="uk-text-meta uk-text-danger" v-show="errors.first(\'user\')">{{ \'Username cannot be blank and may only contain alphanumeric characters (A-Z, 0-9) and some special characters ("._-")\' | trans }}</div>\n                            </div>\n                        </div>\n                        <div class="uk-margin">\n                            <label for="form-password" class="uk-form-label">{{ \'Password\' | trans }}</label>\n                            <div class="uk-form-controls">\n                                <div class="uk-inline uk-width-1-1">\n                                    <a class="uk-form-icon uk-form-icon-flip" :uk-icon="vm.hidePassword ? \'lock\' : \'unlock\'" @click.prevent="vm.hidePassword = !vm.hidePassword"></a>\n                                    <input id="form-password" class="uk-width-1-1 uk-input" :type="vm.hidePassword ? \'password\' : \'text\'" name="password" v-model="vm.user.password" v-validate="\'required\'">\n                                </div>\n                                <div class="uk-text-meta uk-text-danger" v-show="errors.first(\'password\')">{{ \'Password cannot be blank.\' | trans }}</div>\n                            </div>\n                        </div>\n                        <div class="uk-margin">\n                            <label for="form-email" class="uk-form-label">{{ \'Email\' | trans }}</label>\n                            <div class="uk-form-controls">\n                                <input id="form-email" class="uk-width-1-1 uk-input" type="email" name="email" v-model="vm.user.email" v-validate="\'required|email\'">\n                                <div class="uk-text-meta uk-text-danger" v-show="errors.first(\'email\')">{{ \'Field must be a valid email address.\' | trans }}</div>\n                            </div>\n                        </div>\n                        <p class="uk-text-right uk-margin-remove-bottom">\n                            <button class="uk-button uk-button-primary" type="submit">\n                                <span class="uk-text-middle">{{ \'Install\' | trans }}</span>\n                                <span class="uk-margin-small-left">\n                                    <svg width="18" height="11" viewBox="0 0 18 11" xmlns="http://www.w3.org/2000/svg">\n                                        <line fill="none" stroke="#FFFFFF" stroke-linecap="round" stroke-miterlimit="10" x1="3" y1="5.5" x2="15" y2="5.5"/>\n                                        <path fill="#FFFFFF" d="M10.5,10.9c-0.128,0-0.256-0.049-0.354-0.146c-0.195-0.195-0.195-0.512,0-0.707l4.597-4.597l-4.597-4.597\n                                        c-0.195-0.195-0.195-0.512,0-0.707s0.512-0.195,0.707,0l4.95,4.95c0.195,0.195,0.195,0.512,0,0.707l-4.95,4.95\n                                        C10.756,10.852,10.628,10.9,10.5,10.9z"/>\n                                    </svg>\n                                </span>\n                            </button>\n                        </p>\n                    </form>\n\n                </div>',methods:{submit:function(){var t=this;this.$validator.validateAll().then(function(e){e&&t.vm.stepSite()})}}},finish:{props:["vm"],template:'\n                <div>\n                    <div class="uk-text-center" v-show="vm.status == \'install\'">\n                        <svg class="tm-loader" width="150" height="150" viewBox="0 0 150 150" xmlns="http://www.w3.org/2000/svg">\n                            <g><circle cx="0" cy="0" r="70" fill="none" stroke-width="2"/></g>\n                        </svg>\n                    </div>\n\n                    <div class="uk-panel uk-padding-small uk-text-center" v-show="vm.status == \'finished\'">\n                        <a :href="$url.route(\'admin\')">\n                            <svg class="tm-checkmark" width="100" height="100" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">\n                                <polyline fill="none" stroke="#FFFFFF" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="5.125,63.25 27.375,89.375 95.25,18.875"/>\n                            </svg>\n                        </a>\n                    </div>\n\n                    <div class="uk-card uk-card-default uk-card-body" v-show="vm.status == \'failed\'">\n                        <h1>{{ \'Installation failed!\' | trans }}</h1>\n                        <div class="uk-text-break">{{ vm.message }}</div>\n                        <p class="uk-text-right uk-margin-remove-bottom">\n                            <button type="button" class="uk-button uk-button-primary" @click="vm.stepInstall">{{ \'Retry\' | trans }}</button>\n                        </p>\n                    </div>\n                </div>'}}};Vue.ready(i)}});